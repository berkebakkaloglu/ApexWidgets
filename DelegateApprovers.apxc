public class DelegateApprovers implements Schedulable {
    static final Integer TIMEOUT_THRESHOLD = 7;
    
    public void execute(SchedulableContext ctx) {
        List<Approval_Delegation__c> approvalDelegations = 
            [SELECT Start_Time__c, End_Time__c, Active__c, Timeout__c 
             FROM Approval_Delegation__c 
             WHERE Timeout__c = False];
        
        if(!approvalDelegations.isEmpty() && approvalDelegations != null) {
            for (Approval_Delegation__c ad : approvalDelegations) {
                if (ad.Active__c) {
                    if (ad.Start_Time__c < Datetime.now() && ad.End_Time__c <= Datetime.now()) {
                        ad.Active__c = False;
                    }
                } else {
                    if (ad.Start_Time__c <= Datetime.now() && ad.End_Time__c > Datetime.now()) {
                        ad.Active__c = True;
                    }
                }
                if (ad.End_Time__c.addDays(TIMEOUT_THRESHOLD) < Datetime.now()) {
                    ad.Timeout__c = True;
                }
            }
            
            update approvalDelegations;
        }
    }
}
